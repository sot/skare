Transition to Ska Runtime Environment 0.10
===========================================

.. Build this document with:
   rst2html.py --stylesheet=/proj/sot/ska/www/ASPECT/aspect.css \
        --embed-stylesheet NOTES.skare-0.10 NOTES.skare-0.10.html

Content
-------

- Python 2.7 (binary install from ActivePython)
- NumPy 1.6 (package install from AP)
- SciPy 0.9 (package install from AP)
- Updates to Python modules: asciitable, cosmocalc, distribute, ipython,
  Jinja2, mpi4py, nose, pyfits, Pygments, pyparsing, PyYAML, Sphinx,
- Updates to C libraries: mpich2, yaml, hdf5
- Pygtk + Gtk+ dependencies
- meld (now works properly)
- Common build process for 32-bit (OCC) and 64-bit

Build
-----

Install (or git pull) skare on 32-bit or 64-bit virtual CentOS-5 machine.
::

  # Get skare repository on virtual CentOS-5 machine
  cd ~/git

  git clone git@github.com:sot/skare.git
  git checkout actpy
  # -- OR --
  git checkout actpy
  git pull origin actpy

  # Choose prefix (dev or flight) and configure
  set prefix=/proj/sot/ska/dev 
  set prefix=/proj/sot/ska
  ./configure --prefix=$prefix

  # Choose 64 or 32-bit installation
  make basedirs libs python_64
  make basedirs libs python_32

  # Create tarfile output (dev or flight)
  cd $prefix
  tar zcf skare-0.10-{32,64}-dev.tar.gz arch bin lib build/*/*/.installed
  tar zcf skare-0.10-{32,64}.tar.gz arch bin lib build/*/*/.installed

Pre-install testing in developement area
----------------------------------------

Eng_archive
^^^^^^^^^^^^

cd ~/hg
hg clone /proj/sot/ska/hg/eng_archive
cd eng_archive

Follow the steps for "Regression test for new skare (..) in $ska/dev" in NOTES.test.

==> OK

Commanded states
^^^^^^^^^^^^^^^^^^
::

  skadev
  cd ~/hg/Chandra.cmd_states_dev
  python setup.py install
  cd ~/hg/cmd_states_dev
  make install
  cd ~/hg/timelines_dev
  make install

  nosetests

==> OK
::

  cd ~/hg/Chandra.cmd_states
  python setup.py install
  cd ~/hg/cmd_states
  make install
  cd ~/hg/timelines
  make install

  nosetests

==> OK

psmc_check
^^^^^^^^^^
::

  skadev
  cd ~/hg/psmc
  ln -s $ska/data/telem_archive $ska/dev/data/
  python ./psmc_check.py --run_start_time='2011:001' --outdir regress_skadev

  # NEW WINDOW
  ska
  python ./psmc_check.py --run_start_time='2011:001' --outdir regress_ska

  diff regress_ska{,dev}/val
  diff regress_ska{,dev}/validation_quant.csv
  rm $ska/dev/data/telem_archive

==> OK

Other modules
^^^^^^^^^^^^^

- Ska.Table: OK (with patch).  Updated because recent pyfits throws IOError,
  not caught properly.  This was true of Flight Ska, just did not run tests for
  pyfits 2.2.2 install.
- Ska.DBI: OK
- Quaternion: OK
- Ska.ftp: OK
- Ska.Numpy: OK
- Ska.ParseCM: OK
- Ska.quatutil: OK
- Ska.Shell: OK
- asciitable: OK

Flight Installation on HEAD network
------------------------------------

Copy the skare tar distribution skare-0.10-64.tar.gz to /proj/sot/ska/dist.
::

  cd /proj/sot/ska/dist
  mkdir skare-0.10-64
  cd skare-0.10-64
  tar xf ../skare-0.10-64.tar.gz

  # preview updates in key areas
  rsync --size-only --dry-run -av ./bin/ /proj/sot/ska/bin/
  rsync --size-only --dry-run -av ./lib/ /proj/sot/ska/lib/

  rsync -av ./ /proj/sot/ska/ >& install.log &
  tail -f install.log

  # Make modules that cannot be made on virtual machine, e.g. Sybase, and
  # ensure completeness.
  make python_modules

Fallback
--------
::

  rsync --dry-run -av /proj/sot/.snapshot/nightly.0/ska/bin/ /proj/sot/ska/bin/
  rsync --dry-run -av /proj/sot/.snapshot/nightly.0/ska/lib/ /proj/sot/ska/lib/

  rsync -av /proj/sot/.snapshot/nightly.0/ska/bin/ /proj/sot/ska/bin/
  rsync -av /proj/sot/.snapshot/nightly.0/ska/lib/ /proj/sot/ska/lib/

Post-install testing 
--------------------

Eng_archive
^^^^^^^^^^^^
::

  cd ~/hg
  hg clone /proj/sot/ska/hg/eng_archive
  cd eng_archive

Follow the steps for "Regression test for new skare in /proj/sot/ska" in NOTES.test.

==> 

Commanded states
^^^^^^^^^^^^^^^^^^^
::

  cd ~/hg/timelines
  nosetests

==> 

psmc_check
^^^^^^^^^^
::

  ska
  cd ~/hg/psmc
  python ./psmc_check.py --run_start_time='2011:001' --outdir regress_ska.new

  diff regress_ska{.new,.7cb31b}/val
  diff regress_ska{.new,.7cb31b}/validation_quant.csv

==> 

Other modules
^^^^^^^^^^^^^

- Ska.Table: 
- Ska.DBI: 
- Quaternion:
- Ska.ftp: 
- Ska.Numpy: 
- Ska.ParseCM: 
- Ska.quatutil: 
- Ska.Shell: 
- asciitable: 



